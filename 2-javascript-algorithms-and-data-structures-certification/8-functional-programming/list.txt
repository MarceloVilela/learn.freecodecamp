[...document.querySelectorAll('.block.open a')].map((el, key)=>console.log(`> ${++key}-${el.getAttribute('href').split('/').pop()}.js`))

VM2346:1 > 1-functional-programming.js
VM2346:1 > 2-learn-about-functional-programming.js
VM2346:1 > 3-understand-functional-programming-terminology.js
VM2346:1 > 4-understand-the-hazards-of-using-imperative-code.js
VM2346:1 > 5-avoid-mutations-and-side-effects-using-functional-programming.js
VM2346:1 > 6-pass-arguments-to-avoid-external-dependence-in-a-function.js
VM2346:1 > 7-refactor-global-variables-out-of-functions.js
VM2346:1 > 8-use-the-map-method-to-extract-data-from-an-array.js
VM2346:1 > 9-implement-map-on-a-prototype.js
VM2346:1 > 10-use-the-filter-method-to-extract-data-from-an-array.js
VM2346:1 > 11-implement-the-filter-method-on-a-prototype.js
VM2346:1 > 12-return-part-of-an-array-using-the-slice-method.js
VM2346:1 > 13-remove-elements-from-an-array-using-slice-instead-of-splice.js
VM2346:1 > 14-combine-two-arrays-using-the-concat-method.js
VM2346:1 > 15-add-elements-to-the-end-of-an-array-using-concat-instead-of-push.js
VM2346:1 > 16-use-the-reduce-method-to-analyze-data.js
VM2346:1 > 17-sort-an-array-alphabetically-using-the-sort-method.js
VM2346:1 > 18-return-a-sorted-array-without-changing-the-original-array.js
VM2346:1 > 19-split-a-string-into-an-array-using-the-split-method.js
VM2346:1 > 20-combine-an-array-into-a-string-using-the-join-method.js
VM2346:1 > 21-apply-functional-programming-to-convert-strings-to-url-slugs.js
VM2346:1 > 22-use-the-every-method-to-check-that-every-element-in-an-array-meets-a-criteria.js
VM2346:1 > 23-use-the-some-method-to-check-that-any-elements-in-an-array-meet-a-criteria.js
VM2346:1 > 24-introduction-to-currying-and-partial-application.js